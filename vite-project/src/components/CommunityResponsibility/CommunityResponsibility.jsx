// CommunityResponsibility.jsx
import React, { useState, useRef } from "react";
import { Canvas, useFrame, useLoader } from "@react-three/fiber";
import { OrbitControls, Sphere, MeshDistortMaterial, Plane } from "@react-three/drei";
import * as THREE from "three";
import "./CommunityResponsibility.css";

const images = [
  "/images/z2346000241203_2c20d4b68755b5f540ee91114347778a.jpg",
  "/images/t8a.jpg",
  "/images/Phu-nu-Viet-Nam.jpg",
  "/images/image-20200910134725-1.jpeg",
  "/images/bao-ve-moi-truong.jpg",
  "/images/10122524_9.4- uu tien 1_22-09-04.jpg",
  "/images/bao-ve-moi-truong_095531998.jpg",
  "/images/5-1647399987-hinh-anh-bao-ve-moi-truong-kinhtemoitruong-3.jpg"
];

const EarthEffect = () => {
  const texture = useLoader(THREE.TextureLoader, "/images/5029a48052f6f91a399a41dcd1004adf854b17ea_2_1380x690.png");
  return (
    <Sphere args={[1, 64, 64]} scale={3}>
      <meshStandardMaterial map={texture} />
    </Sphere>
  );
};

const ImagePlane = ({ img, index, total, onClick }) => {
  const texture = useLoader(THREE.TextureLoader, img);
  const meshRef = useRef();
  const radius = 5;
  const angle = (index / total) * Math.PI * 2;
  const initialX = Math.cos(angle) * radius;
  const initialZ = Math.sin(angle) * radius;

  useFrame(({ clock }) => {
    const t = clock.getElapsedTime() * 0.2;
    meshRef.current.position.x = Math.cos(angle + t) * radius;
    meshRef.current.position.z = Math.sin(angle + t) * radius;
    meshRef.current.lookAt(0, 0, 0);
  });

  return (
    <mesh ref={meshRef} position={[initialX, 0, initialZ]} onClick={() => onClick(img)}>
      <Plane args={[1.2, 1.2]}>
        <meshBasicMaterial attach="material" map={texture} side={THREE.DoubleSide} />
      </Plane>
    </mesh>
  );
};

const CommunityResponsibility = () => {
  const [selectedImage, setSelectedImage] = useState(null);

  return (
    <div className="community-responsibility pt-3">
      <h2 className="title-community" style={{ marginTop: "0px" }}>Tr√°ch nhi·ªám c·ªông ƒë·ªìng c·ªßa Cocoon ü§ù</h2>
      <div className="community-container">
        <div className="content-section">
          <div className="community-content">
            <h3 className="community-title">üåç B·∫£o v·ªá m√¥i tr∆∞·ªùng</h3>
            <ul>
              <li>Khuy·∫øn kh√≠ch t√°i ch·∫ø bao b√¨, gi·∫£m thi·ªÉu r√°c th·∫£i nh·ª±a.</li>
              <li>S·ª≠ d·ª•ng bao b√¨ th√¢n thi·ªán m√¥i tr∆∞·ªùng, h·∫°n ch·∫ø nh·ª±a d√πng m·ªôt l·∫ßn.</li>
              <li>H·ª£p t√°c tr·ªìng c√¢y, d·ªçn r√°c, b·∫£o v·ªá h·ªá sinh th√°i.</li>
            </ul>
            <h3 className="community-title">üéì H·ªó tr·ª£ gi√°o d·ª•c & ph·ª• n·ªØ</h3>
            <ul>
              <li>Cung c·∫•p h·ªçc b·ªïng cho sinh vi√™n ng√†nh m·ªπ ph·∫©m.</li>
              <li>T·∫°o vi·ªác l√†m cho ph·ª• n·ªØ n√¥ng th√¥n qua h·ª£p t√°c s·∫£n xu·∫•t nguy√™n li·ªáu.</li>
              <li>T√†i tr·ª£ s√°ch v·ªü, thi·∫øt b·ªã h·ªçc t·∫≠p cho tr·∫ª em kh√≥ khƒÉn.</li>
            </ul>
            <h3 className="community-title">üè• S·ª©c kh·ªèe & c·ªông ƒë·ªìng</h3>
            <ul>
              <li>Quy√™n g√≥p doanh thu h·ªó tr·ª£ b·ªánh nhi ung th∆∞.</li>
              <li>Cung c·∫•p s·∫£n ph·∫©m chƒÉm s√≥c da mi·ªÖn ph√≠ cho b·ªánh vi·ªán.</li>
              <li>T·ªï ch·ª©c h·ªôi th·∫£o chƒÉm s√≥c da c√πng chuy√™n gia.</li>
            </ul>
            <h3 className="community-title">üíñ Lan t·ªèa tinh th·∫ßn nh√¢n √°i</h3>
            <ul>
              <li>T·ªï ch·ª©c chi·∫øn d·ªãch thi·ªán nguy·ªán gi√∫p ƒë·ª° ng∆∞·ªùi kh√≥ khƒÉn.</li>
              <li>Khuy·∫øn kh√≠ch l·ªëi s·ªëng xanh, ti√™u d√πng b·ªÅn v·ªØng.</li>
              <li>X√¢y d·ª±ng c·ªông ƒë·ªìng y√™u thi√™n nhi√™n, l√†m ƒë·∫πp an to√†n.</li>
            </ul>
          </div>
        </div>

        <div className="earth-section">
          <Canvas camera={{ position: [0, 0, 7] }}>
            <OrbitControls enableZoom={false} />
            <ambientLight intensity={0.5} />
            <directionalLight position={[2, 2, 2]} />
            <EarthEffect />
            {images.map((img, index) => (
              <ImagePlane key={index} img={img} index={index} total={images.length} onClick={setSelectedImage} />
            ))}
          </Canvas>
        </div>
      </div>

      {selectedImage && (
        <div className="image-popup" onClick={() => setSelectedImage(null)}>
          <img src={selectedImage} alt="Selected" />
        </div>
      )}

      <p className="quote">
        üíñ Cocoon tin r·∫±ng kinh doanh kh√¥ng ch·ªâ l√† l·ª£i nhu·∫≠n, m√† c√≤n l√† s·ª± s·∫ª chia v√† tr√°ch nhi·ªám v·ªõi x√£ h·ªôi!
      </p>
    </div>
  );
};

export default CommunityResponsibility;